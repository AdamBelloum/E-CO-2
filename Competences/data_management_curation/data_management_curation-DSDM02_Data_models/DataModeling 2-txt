Data modeling is the process of documenting a complex software system design as an easily understood diagram, using text and symbols to represent the way data needs to flow. The diagram can be used as a blueprint for the construction of new software or for re-engineering a legacy application. 

data modeling

Sponsored News

    Three Use Cases for Interactive Data Discovery and Predictive Analytics
    –SAS Institute Inc.
    What’s Happening in Complex and Always-On Data–And Why You Need a New Approach
    –SAS Institute Inc.
    See More

Vendor Resources

    The Value of Threat Modelling
    –ComputerWeekly.com
    What’s in YOUR Architecture?
    –Sybase, an SAP company

Data modeling is the process of documenting a complex software system design as an easily understood diagram, using text and symbols to represent the way data needs to flow. The diagram can be used as a blueprint for the construction of new software or for re-engineering a legacy application. 
Download this free guide
Hadoop 2 Upgrades: Ready to Take Advantage?

Hadoop doesn’t lack for attention, but that has yet to translate into high adoption or success rates. Find out if you should leverage Hadoop 2 upgrades here.

Traditionally, data models have been built during the analysis and design phases of a project to ensure that the requirements for a new application are fully understood. A data model can be thought of as a flowchart that illustrates the relationships between data. Although capturing all the possible relationships in a data model can be very time-intensive, it's an important step that shouldn't be rushed. Well-documented conceptual, logical and physical data models allow stake-holders to identify errors and make changes before any programming code has been written.

Data modelers often use multiple models to view the same data and ensure that all processes, entities, relationships and data flows have been identified. There are several different approaches to data modeling, including:

Conceptual Data Modeling - identifies the highest-level relationships between different entities.

Enterprise Data Modeling - similar to conceptual data modeling, but addresses the unique requirements of a specific business.

Logical Data Modeling - illustrates the specific entities, attributes and relationships involved in a business function. Serves as the basis for the creation of the physical data model.

Physical Data Modeling - represents an application and database-specific implementation of a logical data model.

See also: Unified Modeling Language (UML)
